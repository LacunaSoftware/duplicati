<?xml version="1.0" encoding="UTF-8"?>

<?include UpgradeData.wxi ?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">

  <!-- Various nice-to-have shorthands for x64/x32 -->
  <?if $(var.Platform) = "x64" ?>
  <?define SystemFolder = "System64Folder" ?>
  <?define SystemFolderX86 = "SystemFolder" ?>
  <?define SoftwareKey = "Software" ?>
  <?define SoftwareKeyX86 = "Software\Wow6432Node" ?>
  <?define ProgramFilesFolder = "ProgramFiles64Folder" ?>
  <?define ProgramFilesFolderX86 = "ProgramFilesFolder" ?>
  <?else?>
  <?define SystemFolder = "SystemFolder" ?>
  <?define SystemFolderX86 = "SystemFolder" ?>
  <?define SoftwareKey = "Software" ?>
  <?define SoftwareKeyX86 = "Software" ?>
  <?define ProgramFilesFolder = "ProgramFilesFolder" ?>
  <?endif?>

  <?define DisplayName = "Backup e-Notariado" ?>

  <Product Id="$(var.ProductCode)" Name="$(var.DisplayName)" Language="1033" Version="$(var.ProductVersion)" Manufacturer="$(var.Manufacturer)" UpgradeCode="$(var.UpgradeCode)">
    <Package InstallerVersion="405" Compressed="yes" Id="$(var.PackageCode)" Platform="$(var.Platform)" InstallScope="perMachine" />
    <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />

    <PropertyRef Id="NETFRAMEWORK45"/>
    <Condition Message="The .NET Framework 4.5 must be installed ([NETFRAMEWORK45])">
      <![CDATA[Installed OR NETFRAMEWORK45]]>
    </Condition>

    <WixVariable Id="WixUILicenseRtf" Value="Resources/LGPL21.rtf" />
    <WixVariable Id="WixUIBannerBmp" Value="Resources/InstallerSmall.bmp" />
    <WixVariable Id="WixUIDialogBmp" Value="Resources/InstallerLarge.bmp" />

    <UI>
      <UIRef Id="WixUI_FeatureTree"/>

      <Publish Dialog="ExitDialog"
          Control="Finish"
          Event="DoAction"
          Value="LaunchApplication">
        <![CDATA[WIXUI_EXITDIALOGOPTIONALCHECKBOX and NOT Installed]]>
      </Publish>
    </UI>


    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramMenuFolder" Name="Programs"/>
      <Directory Id="DesktopFolder" Name="Desktop"/>

      <Directory Id="$(var.ProgramFilesFolder)">
        <Directory Id="INSTALLLOCATION" Name="Backup e-Notariado" />
      </Directory>
    </Directory>

    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLLOCATION" />

    <!-- TODO: Make expanded -->
    <Feature Id="ProductFeature" Title="Backup e-Notariado" Level="1" Description="Instala o Backup e-Notariado." AllowAdvertise="no" TypicalDefault="install" InstallDefault="local" Absent="disallow" ConfigurableDirectory="INSTALLLOCATION" >
      <Feature Id="ENBDesktopShortCutFeature" Title="Atalho na Área de Trabalho" Level="1" Description ="Instala um atalho para o Backup e-Notariado na área de trabalho" Absent="allow" AllowAdvertise="no" TypicalDefault="install" InstallDefault="local">
        <ComponentRef Id="ENBDesktopShortcutComponent"/>
      </Feature>

      <Feature Id="ENBProgramMenuShortCutFeature" Title="Atalho no Menu de Programas" Level="1" Description ="Instala um atalho para o Backup e-Notariado no menu de programas" Absent="allow" AllowAdvertise="no" TypicalDefault="install" InstallDefault="local">
        <ComponentRef Id="ENBProgramMenuShortcutComponent"/>
      </Feature>
      <ComponentGroupRef Id="DUPLICATIBIN" />
    </Feature>

    <Feature Id="ENBStartupShortCutFeature" Title="Iniciar Backup e-Notariado ao inicializar" Level="1" Description ="Automaticamente inicia Backup e-Notariado quando inicializar o sistema" Absent="allow" AllowAdvertise="no" TypicalDefault="install" InstallDefault="local">
      <ComponentRef Id="StartupMenuItem"/>
    </Feature>

    <!-- Launch Backup e-Notariado setup -->
    <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Value="Iniciar Backup e-Notariado" />
    <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOX" Value="1" />
    <CustomAction Id="LaunchApplication" FileKey="Duplicati.GUI.TrayIcon.exe" Impersonate="yes" ExeCommand="" Return="asyncNoWait" />

    <!-- Set the Add/Remove icon -->
    <Property Id="ARPPRODUCTICON" Value="DuplicatiIcon.exe" />

    <!-- Remove old versions and initialize windows service -->
    <CustomAction Id='InstallService' Directory='INSTALLLOCATION' Execute='deferred' Impersonate='no' ExeCommand='[INSTALLLOCATION]Duplicati.WindowsService.exe install' Return='check' />
    <CustomAction Id='UninstallService' Directory='INSTALLLOCATION' Execute='deferred' Impersonate='no' ExeCommand='[INSTALLLOCATION]Duplicati.WindowsService.exe uninstall' Return='ignore' />
    
    <InstallExecuteSequence>
      <Custom Action='UninstallService' Before='RemoveFiles'></Custom>
      <RemoveExistingProducts Before='InstallInitialize' />
      <Custom Action='InstallService' After='InstallFiles'>NOT ((NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL"))</Custom> <!-- On everything except for uninstall -->
      <ScheduleReboot After="InstallFinalize"/>
    </InstallExecuteSequence>

    <Property Id="PREVIOUSVERSIONSINSTALLED" Secure="yes" />
    <Upgrade Id="$(var.UpgradeCode)">
      <UpgradeVersion Minimum="1.0.0" Property="PREVIOUSVERSIONSINSTALLED"  Maximum="99.0.0.0" IncludeMinimum="yes" IncludeMaximum="no" />
    </Upgrade>

  </Product>
</Wix>
